//思路：模拟题，注意效率即可
//书架以及书架上的书
var books  = [
    ['technology1','author1'],
    ['literature1','author2'],
    ['history1','author4'],
    ['literature2','author2'],
    ['technology2','author1'],
    ['literature3','author3'],
    ['history2','author7'],
    ['technology3','author1'],
];
//由归还的书组成的数组
var returnedBooksArray = [];
function bookSort(item1,item2) {
    if(item1[0]==item2[0]){
        if(item1[1]==item2[1]){
            return 0;
        }else if(item1[1]>item2[1]){
            return 1;
        }else{
            return -1;
        }
    }else if(item1[0]>item2[0]){
        return 1;
    }else{
        return -1;
    }
}
books.sort(bookSort);

//借书
function borrow(bookTitle){
    var index = -1;
    var bookAuthor = '';
    for(var i=0;i<books.length;i++){
        if(books[i][0] === bookTitle){
            index = i;
            bookAuthor = books[index][1];
            //该位置置位0，表示书架上该位置是空的
            books[i][0]=books[i][1]=0;
            break;
        }
    }

    if(index!==-1){
        return [bookTitle,bookAuthor];
    }else{
        return [];
    }

}

//还书,参数是一个数组，表示一本书
function returnBook(bookStruct){
    returnedBooksArray.push(bookStruct);
}
//上架所有图书
function shelving(){
    if(returnedBooksArray.length === 0){
        return;
    }else{
        //排序
        returnedBooksArray.sort(bookSort);
        var lastBookPos = 0;
        while(returnedBooksArray.length>0){
            var tempBook = returnedBooksArray.shift();
            var ret = shelvingOneBook(tempBook,lastBookPos);
            lastBookPos = ret[1];
            console.log(ret[0]+' '+ret[1]);
        }

    }
}
//上架某一本书,返回上架时的位置,参数是上一本数的位置
function shelvingOneBook(bookStruct,startPos){
    var tempPos = startPos;
    if(tempPos>=books.length){
        books.push([0,0]);
    }
    //该处有书了
    while(books[tempPos][0]!==0){
        tempPos++;
    }
    //在该处上架
    books[tempPos] = bookStruct;
    //返回
    return [bookStruct[0],tempPos+1];
}

//输出书架
function show() {
    for (var i = 0; i < books.length; i++) {
        console.log(books[i][0], books[i][1])
    }
}


//测试数据
borrow('technology1')
borrow('history1')
borrow('literature1')

returnBook(['technology1','author1'])
returnBook(['literature1','author2'])
returnBook(['history1','author4'])

shelving()
